{"version":3,"sources":["components/rangeInput.module.css","components/strength.module.css","App.module.css","components/generate.module.css","components/options.module.css","store/generate-password.js","components/generate.js","components/rangeInput.js","components/options.js","assets/clipboard.svg","components/password.js","components/strength.js","App.js","store/index.js","index.js","components/password.module.css"],"names":["module","exports","pwGeneratorSlice","createSlice","name","initialState","passwordLength","numbers","numbersChecked","symbols","symbolsChecked","lowercase","lowercaseChecked","uppercase","uppercaseChecked","combined","strength","pwError","reducers","changeLength","state","action","length","payload","changeNumbers","changeSymbols","changeLowercase","changeUppercase","combineChoices","newArr","push","newPassword","arr","result","characters","join","i","charAt","Math","floor","random","generatePassword","console","log","pwActions","actions","Generate","dispatch","useDispatch","className","classes","btn","onClick","RangeInput","rangeValue","useSelector","slider","showValue","type","customSlider","onChange","event","target","value","min","max","steps","Options","numbersValue","symbolsValue","lowercaseValue","uppercaseValue","optionsContainer","optionsWrapper","lengthWrapper","optionName","optionWrapper","descriptionWrapper","checkBox","check","checked","svgCheck","width","height","points","optionDesc","Password","generatedPassword","useState","popupActive","setPopupActive","passwordContainer","popup","fadeIn","fadeOut","password","bold","text","copyBtn","setTimeout","copy","src","CopyIcon","alt","Strength","pwStrength","visible","hidden","App","mainWrapper","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81c87ba9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"slider\":\"rangeInput_slider__3R9Wo\",\"showValue\":\"rangeInput_showValue__3QmOU\",\"customSlider\":\"rangeInput_customSlider__2Io_6\",\"values\":\"rangeInput_values__3BAv1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pwStrength\":\"strength_pwStrength__aGJEc\",\"slideDown\":\"strength_slideDown__2p3my\",\"hidden\":\"strength_hidden__1It1b\",\"visible\":\"strength_visible__BvaWy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"App_mainWrapper__1vm6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"generate_btn__3SBQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionsContainer\":\"options_optionsContainer__3Xi-e\",\"optionsWrapper\":\"options_optionsWrapper__1LIcu\",\"lengthWrapper\":\"options_lengthWrapper__1AI_F\",\"optionName\":\"options_optionName__FTLCf\",\"optionDesc\":\"options_optionDesc__vl6DK\",\"checkBox\":\"options_checkBox__C_FhK\",\"svgCheck\":\"options_svgCheck__SJ3_J\",\"check\":\"options_check__1Rl84\",\"optionWrapper\":\"options_optionWrapper__zFfbu\",\"descriptionWrapper\":\"options_descriptionWrapper__10tsN\"};","import {createSlice} from '@reduxjs/toolkit';\r\n\r\n\r\n\r\nconst pwGeneratorSlice = createSlice({\r\n    name: 'passwordGenerator',\r\n    initialState: {\r\n        passwordLength: 10,\r\n        numbers: [...'0123456789'],\r\n        numbersChecked: false,\r\n        symbols: [...'~!@#$%^&*()_+-=[]\\\\{}|;:\\'\",./<>?'],\r\n        symbolsChecked: false,\r\n        lowercase: [...'abcdefghijklmnopqrstuvwxyz'],\r\n        lowercaseChecked: false,\r\n        uppercase: [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\r\n        uppercaseChecked: false,\r\n        combined: '',\r\n        strength: '',\r\n        pwError: false\r\n    },\r\n    reducers: {\r\n        changeLength(state, action) {\r\n            const length = action.payload;\r\n            state.passwordLength = length;\r\n        },\r\n        changeNumbers(state, action) {\r\n            state.numbersChecked = !state.numbersChecked;\r\n        },\r\n        changeSymbols(state, action) {\r\n            state.symbolsChecked = !state.symbolsChecked;\r\n        },\r\n        changeLowercase(state, action) {\r\n            state.lowercaseChecked = !state.lowercaseChecked;\r\n        },\r\n        changeUppercase(state, action) {\r\n            state.uppercaseChecked = !state.uppercaseChecked;\r\n        },\r\n        combineChoices(state, action) {\r\n            state.pwError = false;\r\n            const newArr = [];\r\n            if(state.numbersChecked) {\r\n                newArr.push(...state.numbers);\r\n            }\r\n            if(state.symbolsChecked) {\r\n                newArr.push(...state.symbols);\r\n            }\r\n            if(state.lowercaseChecked) {\r\n                newArr.push(...state.lowercase)\r\n            }\r\n            if(state.uppercaseChecked) {\r\n                newArr.push(...state.uppercase)\r\n            }\r\n            if(!state.numbersChecked && !state.symbolsChecked && !state.lowercaseChecked && !state.uppercaseChecked) {\r\n                state.combined = 'Please make at least one selection';\r\n                state.pwError = true;\r\n                return;\r\n            }\r\n\r\n            const generatePassword = (arr, length) => {\r\n                let result = '';\r\n                const characters = arr.join('');\r\n                for(let i=0; i<length; i++) {\r\n                    result += characters.charAt(Math.floor(Math.random() * characters.length))\r\n                }\r\n                return result;\r\n            }\r\n            const newPassword = generatePassword(newArr, state.passwordLength);\r\n            state.combined = newPassword;\r\n\r\n            if(state.combined.length < 11) {\r\n                state.strength = 'Weak';\r\n            } else if (state.combined.length > 10 && state.combined.length < 18) {\r\n                state.strength = 'Strong';\r\n            } else if (state.combined.length > 17) {\r\n                state.strength = 'Very Strong';\r\n            }\r\n            console.log(state.strength)\r\n\r\n        }\r\n    }\r\n});\r\n\r\nexport const pwActions = pwGeneratorSlice.actions;\r\n\r\nexport default pwGeneratorSlice;\r\n\r\n\r\n// options: [\r\n//     {\r\n//         category: 'uppercase',\r\n//         content: [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ'],\r\n//         selected: false\r\n//     },\r\n//     {\r\n//         category: 'lowercase',\r\n//         content: [...'abcdefghijklmnopqrstuvwxyz'],\r\n//         selected: false\r\n//     },\r\n//     {\r\n//         category: 'symbols',\r\n//         content: [...'~!@#$%^&*()_+-=[]\\\\{}|;:\\'\",./<>?'],\r\n//         selected: false\r\n//     },\r\n//     {\r\n//         category: 'numbers',\r\n//         content: [...'0123456789'],\r\n//         selected: false\r\n//     }\r\n// ]","import { useDispatch} from 'react-redux';\r\nimport classes from './generate.module.css';\r\nimport { pwActions } from '../store/generate-password';\r\n\r\n\r\nconst Generate = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const generatePassword = () => {\r\n        dispatch(pwActions.combineChoices());\r\n    }\r\n\r\n    return <button className={classes.btn} onClick={generatePassword}>Generate password</button>\r\n}\r\n\r\nexport default Generate;","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { pwActions } from \"../store/generate-password\";\r\n\r\nimport classes from './rangeInput.module.css';\r\n\r\nconst RangeInput = () => {\r\n    const dispatch = useDispatch();\r\n    const rangeValue = useSelector(state => state.passwordLength);\r\n\r\n    const changeValueHandler = (event) => {\r\n        dispatch(pwActions.changeLength(event.target.value));\r\n    }\r\n\r\n    return (\r\n        <div className={classes.slider}>\r\n            <div className={classes.showValue}>\r\n                {rangeValue}\r\n            </div>\r\n            <input type='range' className={classes.customSlider} onChange={changeValueHandler}  min='6' max='24' value={rangeValue} steps='1'></input>\r\n        </div>)\r\n}\r\n\r\nexport default RangeInput;","import { useDispatch, useSelector } from 'react-redux';\r\nimport classes from './options.module.css';\r\nimport RangeInput from './rangeInput';\r\nimport { pwActions } from '../store/generate-password';\r\n\r\nconst Options = () => {\r\n    const dispatch = useDispatch();\r\n    const numbersValue = useSelector(state => state.numbersChecked);\r\n    const symbolsValue = useSelector(state => state.symbolsChecked);\r\n    const lowercaseValue = useSelector(state => state.lowercaseChecked);\r\n    const uppercaseValue = useSelector(state => state.uppercaseChecked);\r\n\r\n    const changeNumbersHandler = () => {\r\n        dispatch(pwActions.changeNumbers());\r\n    }\r\n    const changeSymbolsHandler = () => {\r\n        dispatch(pwActions.changeSymbols())\r\n    }\r\n    const changeLowercaseHandler = () => {\r\n        dispatch(pwActions.changeLowercase());\r\n    }\r\n    const changeUppercaseHandler = () => {\r\n        dispatch(pwActions.changeUppercase())\r\n    }\r\n\r\n    return <div className={classes.optionsContainer}>\r\n            <h2>Options</h2>\r\n            <div className={classes.optionsWrapper}>\r\n                <div className={classes.lengthWrapper}>\r\n                    <p className={classes.optionName}>Password length:</p>\r\n                    <RangeInput />\r\n                </div>\r\n                <div className={classes.optionWrapper}>\r\n                    <p className={classes.optionName}>Include numbers:</p>\r\n                    <div className={classes.descriptionWrapper}>\r\n                        <label className={classes.checkBox}>\r\n                            <input className={classes.check} type=\"checkbox\" checked={numbersValue} onChange={changeNumbersHandler}/>\r\n                            <svg className={classes.svgCheck} width=\"29\" height=\"29\">\r\n                                <polyline points=\"20 5 9 17 4 12\"></polyline>\r\n                            </svg>\r\n                        </label>\r\n                        <p className={classes.optionDesc}>(e.g. 1234567)</p>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.optionWrapper}>\r\n                    <p className={classes.optionName}>Include symbols:</p>\r\n                    <div className={classes.descriptionWrapper}>\r\n                        <label className={classes.checkBox}>\r\n                            <input className={classes.check} type=\"checkbox\" checked={symbolsValue} onChange={changeSymbolsHandler} />\r\n                            <svg className={classes.svgCheck} width=\"29\" height=\"29\">\r\n                                <polyline points=\"20 5 9 17 4 12\"></polyline>\r\n                            </svg>\r\n                        </label>\r\n                        <p className={classes.optionDesc}>(e.g. @#$%)</p>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.optionWrapper}>\r\n                    <p className={classes.optionName}>Include lowercase characters:</p>\r\n                    <div className={classes.descriptionWrapper}>\r\n                        <label className={classes.checkBox}>\r\n                            <input className={classes.check} type=\"checkbox\" checked={lowercaseValue} onChange={changeLowercaseHandler} />\r\n                            <svg className={classes.svgCheck} width=\"29\" height=\"29\">\r\n                                <polyline points=\"20 5 9 17 4 12\"></polyline>\r\n                            </svg>\r\n                        </label>\r\n                        <p className={classes.optionDesc}>(e.g. abcdefgh)</p>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.optionWrapper}>\r\n                    <p className={classes.optionName}>Include uppercase characters:</p>\r\n                    <div className={classes.descriptionWrapper}>\r\n                        <label className={classes.checkBox}>\r\n                            <input className={classes.check} type=\"checkbox\" checked={uppercaseValue} onChange={changeUppercaseHandler}/>\r\n                            <svg className={classes.svgCheck} width=\"29\" height=\"29\">\r\n                                <polyline points=\"20 5 9 17 4 12\"></polyline>\r\n                            </svg>\r\n                        </label>\r\n                        <p className={classes.optionDesc}>(e.g. ABCDEFGH)</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Options","export default __webpack_public_path__ + \"static/media/clipboard.e07f20b8.svg\";","import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\n\r\nimport classes from './password.module.css';\r\nimport CopyIcon from '../assets/clipboard.svg';\r\n\r\n\r\nconst Password = () => {\r\n    const generatedPassword = useSelector(state => state.combined);\r\n    const pwError = useSelector(state => state.pwError);\r\n    const [popupActive, setPopupActive] = useState(false);\r\n\r\n    const popupHandler = () => {\r\n        setPopupActive(false);\r\n        if(generatedPassword.length > 0) {\r\n            setPopupActive(true);\r\n            setTimeout(() => {\r\n                setPopupActive(false);\r\n            }, 4000);\r\n\r\n        } else {\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    return <div className={classes.passwordContainer}>\r\n        <p className={`${classes.popup} ${popupActive ? classes.fadeIn : classes.fadeOut}`}>Copied to clipboard!</p>\r\n        <h3 className={`${classes.password} ${generatedPassword.length > 0 && !pwError ? classes.bold : ''} ${generatedPassword.length > 0 && pwError ? classes.pwError : ''}`}>{generatedPassword.length > 0 ? generatedPassword : `Your new password will appear here`}</h3>\r\n        <CopyToClipboard text={generatedPassword}>\r\n            <div className={classes.copyBtn} onClick={popupHandler}>\r\n                <img className={classes.copy} src={CopyIcon} alt='copy to clipboard icon' />\r\n            </div>\r\n        </CopyToClipboard>\r\n    </div> \r\n}\r\n\r\nexport default Password;","import classes from './strength.module.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Strength = () => {\r\n    const pwStrength = useSelector(state => state.strength);\r\n\r\n    return <div className={`${classes.pwStrength} ${pwStrength.length > 0 ? classes.visible : classes.hidden}`}> \r\n        <p>Password strength:</p>\r\n        <p>{pwStrength}</p>\r\n    </div>\r\n}\r\n\r\nexport default Strength;","import classes from './App.module.css';\nimport Generate from './components/generate';\nimport Options from './components/options';\nimport Password from './components/password';\nimport Strength from './components/strength';\n\nfunction App() {\n\n  return <div className={classes.mainWrapper}>\n            <h1>Password Generator</h1>\n            <Password />\n            <Strength />\n            <Options />\n            <Generate />\n          </div>      \n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport pwGeneratorSlice from \"./generate-password\";\r\n\r\nconst store = configureStore({\r\n    reducer: pwGeneratorSlice.reducer\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordContainer\":\"password_passwordContainer__TCnkE\",\"password\":\"password_password__3InIC\",\"bold\":\"password_bold__3wYum\",\"pwError\":\"password_pwError__2uj_V\",\"copyBtn\":\"password_copyBtn__3Krhg\",\"copy\":\"password_copy__2pi5Z\",\"popup\":\"password_popup__1xD0W\",\"fadeOut\":\"password_fadeOut__CVkYF\",\"fadeIn\":\"password_fadeIn__DH95q\"};"],"sourceRoot":""}