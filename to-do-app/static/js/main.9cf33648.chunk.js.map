{"version":3,"sources":["components/ListItem.module.css","App.module.css","components/AddNewTask.module.css","components/TaskList.module.css","components/DeletedItem.module.css","components/FinishedTasks.module.css","components/Search.module.css","store/TaskListSlice.js","components/Search.js","assets/circle.svg","assets/edit.svg","assets/close.svg","components/ListItem.js","assets/arrowUp.svg","assets/arrowDown.svg","components/TaskList.js","assets/plus.svg","components/AddNewTask.js","assets/checked.svg","assets/undo.svg","components/DeletedItem.js","components/FinishedTasks.js","App.js","store/index.js","index.js"],"names":["module","exports","TaskListSlice","createSlice","name","initialState","listItems","finishedItems","reducers","sortAscending","state","action","sort","a","b","createdAt","sortDescending","deleteItem","finishedItem","forEach","item","id","payload","push","filteredItems","filter","addItemToList","editText","text","searchByText","typedText","includes","displayed","backToList","selectedItem","filteredFinishedItems","clearFinishedItems","length","pop","getInitialState","localStorage","getItem","parsedList","JSON","parse","parsedFinishedList","taskActions","actions","Search","dispatch","useDispatch","useState","setTypedText","useEffect","className","classes","searchWrapper","type","onChange","event","target","value","ListItem","props","editableText","setEditableText","editErr","setEditErr","itemId","console","log","editable","setEditable","hidden","textWrapper","src","circle","alt","editInput","textErr","buttonsWrapper","itemBtn","editBtn","onClick","editIcon","closeIcon","TaskList","itemList","useSelector","listWrapper","arrowUp","arrowDown","itemListWrapper","map","AddNewTask","inputText","setInputText","inputTouched","setInputTouched","minErr","setMinErr","maxErr","setMaxErr","addNew","wrapper","inputWrapper","placeholder","onBlur","uniqid","newTimeStamp","Date","getTime","itemToAdd","buttonImage","plusImg","DeletedItem","deletedItem","checkedImg","undoImg","FinishedTasks","finishedItemsWrapper","finishedItemsList","indexOf","closeImg","firstRender","App","noItems","setNoItems","listString","stringify","setItem","finishedItemsString","mainWrapper","mainTitle","secondaryWrapper","noTasksTitle","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cf33648.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ListItem_item__1UEMD\",\"itemFade\":\"ListItem_itemFade__27wt1\",\"textWrapper\":\"ListItem_textWrapper__2DdAa\",\"editInput\":\"ListItem_editInput__29xxR\",\"textErr\":\"ListItem_textErr__3NxpM\",\"hidden\":\"ListItem_hidden__11n8D\",\"buttonsWrapper\":\"ListItem_buttonsWrapper__BCQs7\",\"itemBtn\":\"ListItem_itemBtn__23TsE\",\"editBtn\":\"ListItem_editBtn__2EX0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"App_mainWrapper__1QCbA\",\"secondaryWrapper\":\"App_secondaryWrapper__3YRyk\",\"noTasksTitle\":\"App_noTasksTitle__2q1t9\",\"mainTitle\":\"App_mainTitle__NhoC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addNew\":\"AddNewTask_addNew__3Wtb_\",\"wrapper\":\"AddNewTask_wrapper__2q155\",\"inputWrapper\":\"AddNewTask_inputWrapper__iA5SE\",\"fadeIn\":\"AddNewTask_fadeIn__3-RSH\",\"buttonImage\":\"AddNewTask_buttonImage__21W2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrapper\":\"TaskList_listWrapper__BNn9k\",\"buttonsWrapper\":\"TaskList_buttonsWrapper__3icEv\",\"itemListWrapper\":\"TaskList_itemListWrapper__314Sr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deletedItem\":\"DeletedItem_deletedItem__2vaQN\",\"delItemFade\":\"DeletedItem_delItemFade__3XfU4\",\"text\":\"DeletedItem_text__QownT\",\"itemBtn\":\"DeletedItem_itemBtn__35Y_n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"finishedItemsWrapper\":\"FinishedTasks_finishedItemsWrapper__1iPba\",\"finishedItemsList\":\"FinishedTasks_finishedItemsList__27voY\",\"closeImg\":\"FinishedTasks_closeImg__Om8_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchWrapper\":\"Search_searchWrapper__3wg9r\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst TaskListSlice = createSlice({\r\n    name: 'tasks',\r\n    initialState: {\r\n        listItems: [],\r\n        finishedItems: []\r\n    },\r\n    reducers: {\r\n        sortAscending(state, action) {\r\n            state.listItems.sort((a, b) => {return a.createdAt - b.createdAt})\r\n        },\r\n        sortDescending(state, action) {\r\n            state.listItems.sort((a, b) => {return b.createdAt - a.createdAt})\r\n        },\r\n        deleteItem(state, action) {\r\n            let finishedItem;\r\n            state.listItems.forEach(item => {\r\n                if(item.id === action.payload) {\r\n                    finishedItem = item;\r\n                }\r\n            })\r\n            state.finishedItems.push(finishedItem);\r\n            const filteredItems = state.listItems.filter(item => item.id !== action.payload);\r\n            state.listItems = filteredItems;\r\n\r\n        },\r\n        addItemToList(state, action) {\r\n            state.listItems.push(action.payload);\r\n        },\r\n        editText(state, action) {\r\n            const {id, text} = action.payload;\r\n            state.listItems.forEach(item => {\r\n                if(item.id === id) {\r\n                    item.text = text;\r\n                }\r\n            });\r\n        },\r\n        searchByText(state, action) {\r\n            const typedText = action.payload;\r\n            state.listItems.forEach((item) => {\r\n                if(item.text.includes(typedText)) {\r\n                    item.displayed = true;\r\n                } else {\r\n                    item.displayed = false;\r\n                }\r\n            })\r\n        },\r\n        backToList(state, action) {\r\n            let selectedItem;\r\n            state.finishedItems.forEach(item => {\r\n                if(item.id === action.payload) {\r\n                    selectedItem = item;\r\n                }\r\n            })\r\n            state.listItems.push(selectedItem);\r\n            const filteredFinishedItems = state.finishedItems.filter(item => item.id !== action.payload);\r\n            state.finishedItems = filteredFinishedItems;\r\n        },\r\n        clearFinishedItems (state, action) {\r\n            while(state.finishedItems.length > 0) {\r\n                state.finishedItems.pop();\r\n            }\r\n        },\r\n        getInitialState(state, action) {\r\n            if(localStorage.getItem('listItems')) {\r\n                const parsedList = JSON.parse(localStorage.getItem('listItems'));\r\n                state.listItems = parsedList;\r\n            } else {\r\n                state.listItems = [];\r\n            }\r\n            if(localStorage.getItem('finishedItems')) {\r\n                const parsedFinishedList = JSON.parse(localStorage.getItem('finishedItems'));\r\n                state.finishedItems = parsedFinishedList; \r\n            } else {\r\n                state.finishedItems = [];\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const taskActions = TaskListSlice.actions;\r\n\r\nexport default TaskListSlice;","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { taskActions } from \"../store/TaskListSlice\";\r\n\r\n\r\nimport classes from './Search.module.css';\r\n\r\nconst Search = () => {\r\n    const dispatch = useDispatch();\r\n    const [typedText, setTypedText] = useState('');\r\n\r\n    useEffect(() => {\r\n        dispatch(taskActions.searchByText(typedText));\r\n    },[typedText, dispatch]);\r\n\r\n    return  <div className={classes.searchWrapper}>\r\n                <h2>Search tasks by name</h2>\r\n                <input type=\"text\" onChange={(event) => {setTypedText(event.target.value)}} value={typedText}/>\r\n            </div>\r\n\r\n\r\n}\r\n\r\nexport default Search;","export default __webpack_public_path__ + \"static/media/circle.51234e4a.svg\";","export default __webpack_public_path__ + \"static/media/edit.d9591987.svg\";","export default __webpack_public_path__ + \"static/media/close.4c933f39.svg\";","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { taskActions } from '../store/TaskListSlice';\r\n\r\n\r\n\r\nimport classes from './ListItem.module.css';\r\nimport circle from '../assets/circle.svg';\r\nimport editIcon from '../assets/edit.svg';\r\nimport closeIcon from '../assets/close.svg';\r\n\r\nconst ListItem = (props) => {\r\n    const [editableText, setEditableText] = useState(props.text)\r\n    const [editErr, setEditErr] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const itemId = props.id;\r\n    const displayed = props.displayed;\r\n\r\n    useEffect(() => {\r\n        if(editableText.length < 3 || editableText.length > 29) {\r\n            setEditErr(true);\r\n            console.log(editErr)\r\n        } else {\r\n            setEditErr(false);\r\n            console.log(editErr)\r\n        }\r\n    },[editableText])\r\n    \r\n\r\n    const [editable, setEditable] = useState(false);\r\n\r\n    const deleteItemHandler = () => {\r\n        dispatch(taskActions.deleteItem(itemId))\r\n    }\r\n\r\n    const doneEditingHandler = () => {\r\n        if(editableText.length < 3) {\r\n            return;\r\n        }\r\n        if(editableText.length > 29) {\r\n            return;\r\n        }\r\n        dispatch(taskActions.editText({id: itemId, text: editableText}))\r\n        setEditable(false);\r\n    }\r\n\r\n    return <div className={`${classes.item} ${displayed ? '' : classes.hidden}`}>\r\n                <div className={classes.textWrapper}>\r\n                    {!editable && <p><img src={circle} alt=\"circle\"/><span>{props.text}</span></p>}\r\n                    {editable && <input type=\"text\" className={`${classes.editInput} ${editErr ? classes.textErr : ''}`} onChange={(event) => {setEditableText(event.target.value)}} value={editableText} /> }\r\n                </div>\r\n                <div className={classes.buttonsWrapper}>\r\n                    {!editable && <button className={`${classes.itemBtn} ${classes.editBtn}`} onClick={() => {setEditable(true)}}>\r\n                        <img src={editIcon} alt='edit'/>\r\n                        </button>}\r\n                    {editable && <button className={classes.itemBtn} onClick={doneEditingHandler}>\r\n                        <img src={closeIcon} alt=\"close\" />\r\n                        <span>Done Editing</span>\r\n                        </button>}\r\n                    {!editable && <button className={classes.itemBtn} onClick={deleteItemHandler}>Finish Task</button>}\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default ListItem;","export default __webpack_public_path__ + \"static/media/arrowUp.99ea66d5.svg\";","export default __webpack_public_path__ + \"static/media/arrowDown.4b209198.svg\";","import {useSelector, useDispatch} from 'react-redux';\r\nimport { taskActions } from '../store/TaskListSlice';\r\n\r\nimport ListItem from './ListItem';\r\n\r\nimport classes from './TaskList.module.css';\r\nimport arrowUp from '../assets/arrowUp.svg';\r\nimport arrowDown from '../assets/arrowDown.svg';\r\n\r\nconst TaskList = () => {\r\n    const dispatch = useDispatch();\r\n    const itemList = useSelector(state => state.listItems);\r\n\r\n    const sortAscending = () => {\r\n        dispatch(taskActions.sortAscending())\r\n    }\r\n    const sortDescending = () => {\r\n        dispatch(taskActions.sortDescending())\r\n    }\r\n\r\n    return <div className={classes.listWrapper}>\r\n        <h2>Active tasks</h2>\r\n        <h3>Sort tasks by date</h3>\r\n        <div className={classes.buttonsWrapper}>\r\n            <button onClick={sortAscending}>\r\n                <img src={arrowUp} alt='arrow up' />\r\n                <span>Sort Ascending</span>\r\n            </button>\r\n            <button onClick={sortDescending}>\r\n                <img src={arrowDown} alt='arrow up' />\r\n                <span>Sort Descending</span>\r\n            </button>\r\n        </div>\r\n        <div className={classes.itemListWrapper}>\r\n            {itemList.map(item => <ListItem text={item.text} key={item.id} id={item.id} displayed={item.displayed}/>)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default TaskList;","export default __webpack_public_path__ + \"static/media/plus.2a737c0d.svg\";","import uniqid from 'uniqid';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nimport { taskActions } from '../store/TaskListSlice';\r\n\r\nimport classes from './AddNewTask.module.css';\r\nimport plusImg from '../assets/plus.svg';\r\n\r\nconst AddNewTask = () => {\r\n    const dispatch = useDispatch();\r\n    const [inputText, setInputText] = useState('');\r\n    const [inputTouched, setInputTouched] = useState(false);\r\n    const [minErr, setMinErr] = useState(false);\r\n    const [maxErr, setMaxErr] = useState(false);\r\n\r\n    const updateTextHandler = (event) => {\r\n        setInputText(event.target.value);\r\n    }\r\n\r\n    const checkValidity = () => {\r\n        setInputTouched(true);\r\n        if(inputText.length < 3) {\r\n            setMinErr(true);\r\n        } else if(inputText.length > 2) {\r\n            setMinErr(false)\r\n        }\r\n        if(inputText.length > 30) {\r\n            setMaxErr(true);\r\n        } else if (inputText.length < 31) {\r\n            setMaxErr(false);\r\n        }\r\n        if(inputText.length === 0) {\r\n            setMinErr(false);\r\n            setInputTouched(false);\r\n        }\r\n    }\r\n\r\n\r\n    const getTimeStamp = () => {\r\n        const currentDate = new Date().getTime();\r\n        return currentDate - 1645197300000;\r\n    }\r\n\r\n    const addNewItem = () => {\r\n        if(inputTouched && minErr) {\r\n            return ;\r\n        }\r\n        if(inputTouched && maxErr) {\r\n            return;\r\n        }\r\n        if(!inputTouched) {\r\n            return;\r\n        }\r\n        const id = uniqid();\r\n        const newTimeStamp = getTimeStamp();\r\n        const itemToAdd = {\r\n            text: inputText,\r\n            createdAt: newTimeStamp,\r\n            id,\r\n            displayed: true\r\n        };\r\n        dispatch(taskActions.addItemToList(itemToAdd));\r\n        setInputText('');\r\n        setInputTouched(false);\r\n    }\r\n\r\n    return <div className={classes.addNew}>\r\n                <h2>Add a task</h2>\r\n                <div className={classes.wrapper}>\r\n                    <div className={classes.inputWrapper}>\r\n                        <input placeholder='Maximum 30 characters ' type=\"text\" onChange={updateTextHandler} onBlur={checkValidity} value={inputText}/>\r\n                        {minErr && <p>Min characters allowed is 3</p>}\r\n                        {maxErr && <p>Max characters allowed is 30</p>}\r\n                    </div>\r\n                    <button onClick={addNewItem}><img className={classes.buttonImage} src={plusImg} alt=\"add\" /></button>\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default AddNewTask;","export default __webpack_public_path__ + \"static/media/checked.f4098c5d.svg\";","export default __webpack_public_path__ + \"static/media/undo.bb17f977.svg\";","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { taskActions } from \"../store/TaskListSlice\";\r\n\r\nimport classes from './DeletedItem.module.css';\r\nimport checkedImg from '../assets/checked.svg';\r\nimport undoImg from '../assets/undo.svg';\r\n\r\n\r\n\r\nconst DeletedItem = (props) => {\r\n    const dispatch = useDispatch();\r\n    const itemId = props.id;\r\n\r\n    const moveItemBackHandler = () => {\r\n        dispatch(taskActions.backToList(itemId))\r\n    }\r\n\r\n    return <div className={classes.deletedItem}>\r\n                <p><img src={checkedImg} alt=\"checked\"/><span className={classes.text}>{props.text}</span></p>\r\n                <button className={classes.itemBtn} onClick={moveItemBackHandler}><img src={undoImg} alt=\"undo\"/><span>Undo</span></button>\r\n    </div>\r\n}\r\n\r\nexport default DeletedItem;","import React from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { taskActions } from \"../store/TaskListSlice\"\r\n\r\nimport DeletedItem from \"./DeletedItem\";\r\n\r\nimport classes from './FinishedTasks.module.css';\r\nimport closeIcon from '../assets/close.svg';\r\n\r\n\r\n\r\nconst FinishedTasks = () => {\r\n    const dispatch = useDispatch();\r\n    const finishedItems = useSelector(state => state.finishedItems);\r\n\r\n    const clearFinishedItemsHandler = () => {\r\n        dispatch(taskActions.clearFinishedItems());\r\n    } \r\n\r\n    return  <div className={classes.finishedItemsWrapper}>\r\n                <h2>Finished tasks</h2>\r\n                <div className={classes.finishedItemsList}>\r\n                    {finishedItems.map(item => <DeletedItem text={item.text} key={finishedItems.indexOf(item)} id={item.id}/>)}   \r\n                </div>\r\n                <button onClick={clearFinishedItemsHandler}>\r\n                        <img className={classes.closeImg} src={closeIcon} alt=\"close\" />\r\n                        <span>Clear finished items</span>\r\n                </button>\r\n            </div> \r\n}\r\n\r\nexport default FinishedTasks;","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { taskActions } from './store/TaskListSlice';\n\nimport Search from './components/Search';\nimport TaskList from './components/TaskList';\nimport AddNewTask from './components/AddNewTask';\nimport FinishedTasks from './components/FinishedTasks';\n\nimport classes from './App.module.css';\n\nlet firstRender = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [noItems, setNoItems] = useState(false);\n  const listItems = useSelector(state => state.listItems);\n  const finishedItems = useSelector(state => state.finishedItems);\n\n  useEffect(() => {\n    dispatch(taskActions.getInitialState());\n    if(listItems.length === 0 && finishedItems.length === 0) {\n      setNoItems(true);\n    }\n    firstRender = false;\n  }, [])\n\n\n\n  useEffect(() => {\n    if(!firstRender) {\n      const listString = JSON.stringify(listItems);\n      localStorage.setItem('listItems', listString);\n      const finishedItemsString = JSON.stringify(finishedItems);\n      localStorage.setItem('finishedItems', finishedItemsString);\n    }\n    if(listItems.length > 0 || finishedItems.length > 0) {\n      setNoItems(false);\n    }\n\n  },[listItems, finishedItems])\n\n  return  <div className={classes.mainWrapper}>\n            <h1 className={classes.mainTitle}><span>To do </span>list</h1>\n            <AddNewTask />\n            {!noItems && <div className={classes.secondaryWrapper}>\n              <Search />\n              <TaskList />\n              <FinishedTasks />\n            </div>}\n            {noItems && <div className={classes.secondaryWrapper}>\n              <p className={classes.noTasksTitle}>Create a <span>list</span> of tasks and manage it here!</p>\n            </div>\n            }\n          </div>\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport TaskListSlice from './TaskListSlice';\r\n\r\nconst store = configureStore({\r\n    reducer: TaskListSlice.reducer\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}